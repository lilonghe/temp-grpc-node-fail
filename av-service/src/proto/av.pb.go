// Code generated by protoc-gen-go. DO NOT EDIT.
// source: av.proto

package av

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAVListReq struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Keyword              string   `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAVListReq) Reset()         { *m = GetAVListReq{} }
func (m *GetAVListReq) String() string { return proto.CompactTextString(m) }
func (*GetAVListReq) ProtoMessage()    {}
func (*GetAVListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_25652d78902d734c, []int{0}
}

func (m *GetAVListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAVListReq.Unmarshal(m, b)
}
func (m *GetAVListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAVListReq.Marshal(b, m, deterministic)
}
func (m *GetAVListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAVListReq.Merge(m, src)
}
func (m *GetAVListReq) XXX_Size() int {
	return xxx_messageInfo_GetAVListReq.Size(m)
}
func (m *GetAVListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAVListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAVListReq proto.InternalMessageInfo

func (m *GetAVListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAVListReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetAVListReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type GetAVListRep struct {
	Datas                []*AV    `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAVListRep) Reset()         { *m = GetAVListRep{} }
func (m *GetAVListRep) String() string { return proto.CompactTextString(m) }
func (*GetAVListRep) ProtoMessage()    {}
func (*GetAVListRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_25652d78902d734c, []int{1}
}

func (m *GetAVListRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAVListRep.Unmarshal(m, b)
}
func (m *GetAVListRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAVListRep.Marshal(b, m, deterministic)
}
func (m *GetAVListRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAVListRep.Merge(m, src)
}
func (m *GetAVListRep) XXX_Size() int {
	return xxx_messageInfo_GetAVListRep.Size(m)
}
func (m *GetAVListRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAVListRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetAVListRep proto.InternalMessageInfo

func (m *GetAVListRep) GetDatas() []*AV {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *GetAVListRep) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type AV struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover                string   `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AV) Reset()         { *m = AV{} }
func (m *AV) String() string { return proto.CompactTextString(m) }
func (*AV) ProtoMessage()    {}
func (*AV) Descriptor() ([]byte, []int) {
	return fileDescriptor_25652d78902d734c, []int{2}
}

func (m *AV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AV.Unmarshal(m, b)
}
func (m *AV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AV.Marshal(b, m, deterministic)
}
func (m *AV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AV.Merge(m, src)
}
func (m *AV) XXX_Size() int {
	return xxx_messageInfo_AV.Size(m)
}
func (m *AV) XXX_DiscardUnknown() {
	xxx_messageInfo_AV.DiscardUnknown(m)
}

var xxx_messageInfo_AV proto.InternalMessageInfo

func (m *AV) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AV) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AV) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAVListReq)(nil), "GetAVListReq")
	proto.RegisterType((*GetAVListRep)(nil), "GetAVListRep")
	proto.RegisterType((*AV)(nil), "AV")
}

func init() { proto.RegisterFile("av.proto", fileDescriptor_25652d78902d734c) }

var fileDescriptor_25652d78902d734c = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xbf, 0x4b, 0xc4, 0x30,
	0x14, 0x07, 0x70, 0xdb, 0xd2, 0xd3, 0x3c, 0x7f, 0x0c, 0x41, 0x24, 0x3a, 0x95, 0x4c, 0x05, 0xa1,
	0xc3, 0xb9, 0xb8, 0x69, 0x26, 0x17, 0xa7, 0x08, 0xd9, 0xe3, 0xe5, 0x1d, 0x04, 0x2b, 0xa9, 0xe9,
	0xa3, 0xe2, 0x7f, 0x2f, 0x97, 0x44, 0xb9, 0x8e, 0x9f, 0x2f, 0x8f, 0x97, 0x6f, 0x1e, 0x9c, 0xd9,
	0x65, 0x98, 0x62, 0xa0, 0x20, 0x0d, 0x5c, 0xbc, 0x20, 0x29, 0xf3, 0xea, 0x67, 0xd2, 0xf8, 0xc5,
	0xaf, 0xa1, 0x1d, 0xfd, 0xa7, 0x27, 0x51, 0x75, 0x55, 0xdf, 0xea, 0x0c, 0x7e, 0x03, 0x9b, 0xb0,
	0xdf, 0xcf, 0x48, 0xa2, 0x4e, 0x71, 0x11, 0x17, 0x70, 0xfa, 0x81, 0x3f, 0xdf, 0x21, 0x3a, 0xd1,
	0x74, 0x55, 0xcf, 0xf4, 0x1f, 0xe5, 0xd3, 0x6a, 0xef, 0xc4, 0x6f, 0xa1, 0x75, 0x96, 0xec, 0x2c,
	0xaa, 0xae, 0xe9, 0xcf, 0xb7, 0xcd, 0xa0, 0x8c, 0xce, 0xc9, 0xe1, 0x49, 0x0a, 0x64, 0xc7, 0xb2,
	0x3b, 0x43, 0x3e, 0x43, 0xad, 0x0c, 0xbf, 0x82, 0xda, 0xbb, 0xd2, 0xa5, 0xf6, 0x2e, 0xcd, 0x7a,
	0x1a, 0x31, 0xcd, 0x32, 0x9d, 0x71, 0x48, 0x77, 0x61, 0xc1, 0x58, 0x4a, 0x64, 0x6c, 0x1f, 0x81,
	0x29, 0xf3, 0x86, 0x71, 0xf1, 0x3b, 0xe4, 0xf7, 0xc0, 0xfe, 0xfb, 0xf0, 0xcb, 0xe1, 0xf8, 0xcf,
	0x77, 0x2b, 0x4e, 0xf2, 0xe4, 0x7d, 0x93, 0x6e, 0xf3, 0xf0, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xb9,
	0x69, 0xc4, 0x3c, 0x27, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AVServiceClient is the client API for AVService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AVServiceClient interface {
	GetAVList(ctx context.Context, in *GetAVListReq, opts ...grpc.CallOption) (*GetAVListRep, error)
}

type aVServiceClient struct {
	cc *grpc.ClientConn
}

func NewAVServiceClient(cc *grpc.ClientConn) AVServiceClient {
	return &aVServiceClient{cc}
}

func (c *aVServiceClient) GetAVList(ctx context.Context, in *GetAVListReq, opts ...grpc.CallOption) (*GetAVListRep, error) {
	out := new(GetAVListRep)
	err := c.cc.Invoke(ctx, "/AVService/GetAVList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AVServiceServer is the server API for AVService service.
type AVServiceServer interface {
	GetAVList(context.Context, *GetAVListReq) (*GetAVListRep, error)
}

func RegisterAVServiceServer(s *grpc.Server, srv AVServiceServer) {
	s.RegisterService(&_AVService_serviceDesc, srv)
}

func _AVService_GetAVList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAVListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AVServiceServer).GetAVList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AVService/GetAVList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AVServiceServer).GetAVList(ctx, req.(*GetAVListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AVService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AVService",
	HandlerType: (*AVServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAVList",
			Handler:    _AVService_GetAVList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "av.proto",
}
